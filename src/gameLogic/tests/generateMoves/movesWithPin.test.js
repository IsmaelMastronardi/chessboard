const { calculatePosibleMoves } = require("../../generateMoves");

describe('return all posible, legal moves with a pin',() => {
  describe('black attacking', () => {
    const pinTests = [
      {
        board:
        {
          pieces: [
            ['k', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', 'q', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', 'P', '0'],
            ['0', '0', '0', '0', '0', '0', '0', 'K']
          ],
          turn: 'w',
          castling: '',
          enPassant: '-',
          halfMove: '0',
          fullMove: '1'
        },
          expectedMoves: {
          '77': [ {move: [ 6, 7 ]}, {move: [ 7, 6 ]}]
        }
      },
      {
        board: 
        {
          pieces: [
            ['k', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', 'q', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', 'N', '0'],
            ['0', '0', '0', '0', '0', '0', '0', 'K']
          ],
          turn: 'w',
          castling: '',
          enPassant: '-',
          halfMove: '0',
          fullMove: '1'
        },
          expectedMoves: {
          '77': [{move: [6, 7]}, {move: [7, 6]}],
        }
      },
      {
        board: 
        {
          pieces: [
            ['k', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', 'q', '0', '0', '0'],
            ['0', '0', '0', '0', '0', 'P', '0', '0'],
            ['0', '0', '0', '0', '0', '0', 'K', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0']
          ],
          turn: 'w',
          castling: '',
          enPassant: '-',
          halfMove: '0',
          fullMove: '1'
        },
          expectedMoves: {
            '55': [{capture: true, capturedPiece: "q", move: [4, 4]}],
            '66': [{move: [7, 6]}, {move: [7, 7]}, {move: [6, 7]}, {move: [5, 7]}, {move: [5, 6]}, {move: [6, 5]}, {move: [7, 5]}]
        }
      },
      {
        board: 
        {
          pieces: [
            ['k', '0', '0', '0', '0', '0', '0', '0'],
            ['0', 'q', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', 'Q', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', 'K']
          ],
          turn: 'w',
          castling: '',
          enPassant: '-',
          halfMove: '0',
          fullMove: '1'
        },
          expectedMoves: {
            '55': [{move: [6, 6]}, {move: [4, 4]}, {move: [3, 3]}, {move: [2, 2]}, {capture: true, capturedPiece: 'q' ,move: [1, 1]}],
            '77': [{move: [6, 7]}, {move: [6, 6]}, {move: [7, 6]}]
        }
      },
      {
        board: 
        {
          pieces: [
            ['k', '0', '0', '0', '0', '0', '0', '0'],
            ['0', 'q', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', 'B', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', 'K']
          ],
          turn: 'w',
          castling: '',
          enPassant: '-',
          halfMove: '0',
          fullMove: '1'
        },
          expectedMoves: {
            '55': [{move: [6, 6]}, {move: [4, 4]}, {move: [3, 3]}, {move: [2, 2]}, {capture: true, capturedPiece: 'q', move: [1, 1]}],
            '77': [{move: [6, 7]}, {move: [6, 6]}, {move: [7, 6]}]
        }
      },
      {
        board: 
        {
          pieces: [
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['k', 'q', '0', '0', '0', 'R', '0', 'K'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0']
          ],
          turn: 'w',
          castling: '',
          enPassant: '-',
          halfMove: '0',
          fullMove: '1'
        },
          expectedMoves: {
            '15': [{move: [1, 6]}, {move: [1, 4]}, {move: [1, 3]}, {move: [1, 2]}, {capture: true, capturedPiece: 'q', move: [1, 1]}],
            '17': [{move: [2, 7]}, {move: [0, 7]}, {move: [0, 6]}, {move: [1, 6]}, {move: [2, 6]}]
        }
      },
    ]
    pinTests.forEach(({board, expectedMoves}) => {
      test('in different positions', () => {
        expect(calculatePosibleMoves(board, 'white')).toEqual(expectedMoves);
      });
    });
  });
  describe('white attacking', () => {
    const pinTests = [
      {
        board:
        {
          pieces: [
            ['k', '0', '0', '0', '0', '0', '0', '0'],
            ['0', 'p', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', 'Q', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', 'K']
          ],
          turn: 'B',
          castling: '',
          enPassant: '-',
          halfMove: '0',
          fullMove: '1'
        },
          expectedMoves: {
            '00': [{move: [1, 0]}, {move: [0, 1]}]
        }
      },
      {
        board: 
        {
          pieces: [
            ['k', '0', '0', '0', '0', '0', '0', '0'],
            ['0', 'n', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', 'Q', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', 'K']
          ],
          turn: 'b',
          castling: '',
          enPassant: '-',
          halfMove: '0',
          fullMove: '1'
        },
          expectedMoves: {
            '00': [{move: [1, 0]}, {move: [0, 1]}]
        }
      },
      {
        board: 
        {
          pieces: [
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', 'k', '0', '0', '0', '0', '0', '0'],
            ['0', '0', 'p', '0', '0', '0', '0', '0'],
            ['0', '0', '0', 'Q', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', 'K', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0']
          ],
          turn: 'b',
          castling: '',
          enPassant: '-',
          halfMove: '0',
          fullMove: '1'
        },
          expectedMoves: {
            '11': [{move: [2, 1]}, {move: [1, 2]}, {move: [0, 2]}, {move: [0, 1]}, {move: [0, 0]}, {move: [1, 0]}, {move: [2, 0]}],
            '22': [{capture: true, capturedPiece: 'Q', move: [3, 3]}]
        }
      },
      {
        board: 
        {
          pieces: [
            ['k', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', 'q', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', 'Q', '0'],
            ['0', '0', '0', '0', '0', '0', '0', 'K']
          ],
          turn: 'b',
          castling: '',
          enPassant: '-',
          halfMove: '0',
          fullMove: '1'
        },
          expectedMoves: {
            '00': [{move: [1, 0]}, {move: [1, 1]}, {move: [0, 1]}],
            '22': [{move: [1, 1]}, {move: [3, 3]}, {move: [4, 4]}, {move: [5, 5],}, { capture: true, capturedPiece: 'Q', move: [6, 6]}]
        }
      },
      {
        board: 
        {
          pieces: [
            ['k', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', 'b', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', 'Q', '0'],
            ['0', '0', '0', '0', '0', '0', '0', 'K']
          ],
          turn: 'b',
          castling: '',
          enPassant: '-',
          halfMove: '0',
          fullMove: '1'
        },
          expectedMoves: {
            '00': [{move: [1, 0]}, {move: [1, 1]}, {move: [0, 1]}],
            '22': [{move: [1, 1]}, {move: [3, 3]}, {move: [4, 4]}, {move: [5, 5],}, { capture: true, capturedPiece: 'Q', move: [6, 6]}]
        }
      },
      {
        board: 
        {
          pieces: [
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['k', '0', 'r', '0', '0', '0', 'Q', 'K'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0']
          ],
          turn: 'b',
          castling: '',
          enPassant: '-',
          halfMove: '0',
          fullMove: '1'
        },
          expectedMoves: {
            '10': [{move: [2, 0]}, {move: [2, 1]}, {move: [1, 1]}, {move: [0, 1]}, {move: [0, 0]}],
            '12': [{move: [1, 1]}, {move: [1, 3]}, {move: [1, 4]}, {move: [1, 5]}, {capture: true, capturedPiece: 'Q', move: [1, 6]}]
        }
      },
    ]
    pinTests.forEach(({board, expectedMoves}) => {
      test('in different positions', () => {
        expect(calculatePosibleMoves(board, 'black')).toEqual(expectedMoves);
      });
    });
  });
});