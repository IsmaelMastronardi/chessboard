const { calculatePosibleMoves } = require("../../generateMoves");

describe('return all posible, legal moves with a pin',() => {
  describe('black attacking', () => {
    const pinTests = [
      {
        board:
        {
          pieces: [
            ['k', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', 'q', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', 'P', '0'],
            ['0', '0', '0', '0', '0', '0', '0', 'K']
          ],
          turn: 'w',
          castling: '',
          enPassant: '-',
          halfMove: '0',
          fullMove: '1'
        },
          expectedMoves: {
          '77': [ [ 6, 7 ], [ 7, 6 ] ]
        }
      },
      {
        board: 
        {
          pieces: [
            ['k', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', 'q', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', 'N', '0'],
            ['0', '0', '0', '0', '0', '0', '0', 'K']
          ],
          turn: 'w',
          castling: '',
          enPassant: '-',
          halfMove: '0',
          fullMove: '1'
        },
          expectedMoves: {
          '77': [ [ 6, 7 ], [ 7, 6 ] ]
        }
      },
      {
        board: 
        {
          pieces: [
            ['k', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', 'q', '0', '0', '0'],
            ['0', '0', '0', '0', '0', 'P', '0', '0'],
            ['0', '0', '0', '0', '0', '0', 'K', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0']
          ],
          turn: 'w',
          castling: '',
          enPassant: '-',
          halfMove: '0',
          fullMove: '1'
        },
          expectedMoves: {
          '55': [[4, 4]],
          '66': [[ 7, 6 ], [ 7, 7 ], [ 6, 7 ], [ 5, 7 ], [ 5, 6 ], [ 6, 5 ], [ 7, 5 ]]
        }
      },
      {
        board: 
        {
          pieces: [
            ['k', '0', '0', '0', '0', '0', '0', '0'],
            ['0', 'q', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', 'Q', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', 'K']
          ],
          turn: 'w',
          castling: '',
          enPassant: '-',
          halfMove: '0',
          fullMove: '1'
        },
          expectedMoves: {
          '55': [[6, 6], [4, 4], [3, 3], [2, 2], [1, 1]],
          '77': [[6, 7], [ 6, 6 ], [ 7, 6 ] ]
        }
      },
      {
        board: 
        {
          pieces: [
            ['k', '0', '0', '0', '0', '0', '0', '0'],
            ['0', 'q', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', 'B', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', 'K']
          ],
          turn: 'w',
          castling: '',
          enPassant: '-',
          halfMove: '0',
          fullMove: '1'
        },
          expectedMoves: {
          '55': [[6, 6], [4, 4], [3, 3], [2, 2], [1, 1]],
          '77': [[6, 7], [ 6, 6 ], [ 7, 6 ] ]
        }
      },
      {
        board: 
        {
          pieces: [
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['k', 'q', '0', '0', '0', 'R', '0', 'K'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0']
          ],
          turn: 'w',
          castling: '',
          enPassant: '-',
          halfMove: '0',
          fullMove: '1'
        },
          expectedMoves: {
          '15': [[1, 6], [1, 4], [1, 3], [1, 2], [1, 1]],
          '17': [[2, 7], [ 0, 7 ], [0, 6], [ 1, 6 ], [2, 6] ]
        }
      },
    ]
    pinTests.forEach(({board, expectedMoves}) => {
      test('in different positions', () => {
        expect(calculatePosibleMoves(board, 'white')).toEqual(expectedMoves);
      });
    });
  });
  describe('white attacking', () => {
    const pinTests = [
      {
        board:
        {
          pieces: [
            ['k', '0', '0', '0', '0', '0', '0', '0'],
            ['0', 'p', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', 'Q', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', 'K']
          ],
          turn: 'B',
          castling: '',
          enPassant: '-',
          halfMove: '0',
          fullMove: '1'
        },
          expectedMoves: {
          '00': [ [ 1, 0 ], [ 0, 1 ] ]
        }
      },
      {
        board: 
        {
          pieces: [
            ['k', '0', '0', '0', '0', '0', '0', '0'],
            ['0', 'n', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', 'Q', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', 'K']
          ],
          turn: 'b',
          castling: '',
          enPassant: '-',
          halfMove: '0',
          fullMove: '1'
        },
          expectedMoves: {
          '00': [ [ 1, 0 ], [ 0, 1 ] ]
        }
      },
      {
        board: 
        {
          pieces: [
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', 'k', '0', '0', '0', '0', '0', '0'],
            ['0', '0', 'p', '0', '0', '0', '0', '0'],
            ['0', '0', '0', 'Q', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', 'K', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0']
          ],
          turn: 'b',
          castling: '',
          enPassant: '-',
          halfMove: '0',
          fullMove: '1'
        },
          expectedMoves: {
          '11': [[2, 1], [1, 2], [0, 2],[0, 1], [0, 0], [1, 0] , [2, 0]],
          '22': [[3, 3]],
        }
      },
      {
        board: 
        {
          pieces: [
            ['k', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', 'q', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', 'Q', '0'],
            ['0', '0', '0', '0', '0', '0', '0', 'K']
          ],
          turn: 'b',
          castling: '',
          enPassant: '-',
          halfMove: '0',
          fullMove: '1'
        },
          expectedMoves: {
          '00': [[1, 0], [1, 1], [0, 1]],
          '22': [[1, 1], [3, 3], [4, 4], [5, 5], [6, 6]]
        }
      },
      {
        board: 
        {
          pieces: [
            ['k', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', 'b', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', 'Q', '0'],
            ['0', '0', '0', '0', '0', '0', '0', 'K']
          ],
          turn: 'b',
          castling: '',
          enPassant: '-',
          halfMove: '0',
          fullMove: '1'
        },
          expectedMoves: {
          '00': [[1, 0], [1, 1], [0, 1]],
          '22': [[1, 1], [3, 3], [4, 4], [5, 5], [6, 6]]
        }
      },
      {
        board: 
        {
          pieces: [
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['k', '0', 'r', '0', '0', '0', 'Q', 'K'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0'],
            ['0', '0', '0', '0', '0', '0', '0', '0']
          ],
          turn: 'b',
          castling: '',
          enPassant: '-',
          halfMove: '0',
          fullMove: '1'
        },
          expectedMoves: {
          '10': [[2, 0], [2, 1], [1, 1],[0, 1], [0, 0], ],
          '12': [[1, 1], [1, 3], [1, 4], [1, 5], [1, 6]]
        }
      },
    ]
    pinTests.forEach(({board, expectedMoves}) => {
      test('in different positions', () => {
        expect(calculatePosibleMoves(board, 'black')).toEqual(expectedMoves);
      });
    });
  });
});